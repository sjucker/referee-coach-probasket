/*
 * This file is generated by jOOQ.
 */
package ch.refereecoach.probasket.jooq.tables.daos;


import ch.refereecoach.probasket.jooq.AbstractSpringDAOImpl;
import ch.refereecoach.probasket.jooq.tables.Report;
import ch.refereecoach.probasket.jooq.tables.records.ReportRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class ReportDao extends AbstractSpringDAOImpl<ReportRecord, ch.refereecoach.probasket.jooq.tables.pojos.Report, Long> {

    /**
     * Create a new ReportDao without any configuration
     */
    public ReportDao() {
        super(Report.REPORT, ch.refereecoach.probasket.jooq.tables.pojos.Report.class);
    }

    /**
     * Create a new ReportDao with an attached configuration
     */
    @Autowired
    public ReportDao(Configuration configuration) {
        super(Report.REPORT, ch.refereecoach.probasket.jooq.tables.pojos.Report.class, configuration);
    }

    @Override
    public Long getId(ch.refereecoach.probasket.jooq.tables.pojos.Report object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchById(Long... values) {
        return fetch(Report.REPORT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.refereecoach.probasket.jooq.tables.pojos.Report fetchOneById(Long value) {
        return fetchOne(Report.REPORT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchOptionalById(Long value) {
        return fetchOptional(Report.REPORT.ID, value);
    }

    /**
     * Fetch records that have <code>external_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfExternalId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.EXTERNAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>external_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByExternalId(String... values) {
        return fetch(Report.REPORT.EXTERNAL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>external_id = value</code>
     */
    public ch.refereecoach.probasket.jooq.tables.pojos.Report fetchOneByExternalId(String value) {
        return fetchOne(Report.REPORT.EXTERNAL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>external_id = value</code>
     */
    public Optional<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchOptionalByExternalId(String value) {
        return fetchOptional(Report.REPORT.EXTERNAL_ID, value);
    }

    /**
     * Fetch records that have <code>report_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfReportType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.REPORT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>report_type IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByReportType(String... values) {
        return fetch(Report.REPORT.REPORT_TYPE, values);
    }

    /**
     * Fetch records that have <code>coach_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfCoachId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.COACH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>coach_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByCoachId(Long... values) {
        return fetch(Report.REPORT.COACH_ID, values);
    }

    /**
     * Fetch records that have <code>coach_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfCoachName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.COACH_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>coach_name IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByCoachName(String... values) {
        return fetch(Report.REPORT.COACH_NAME, values);
    }

    /**
     * Fetch records that have <code>reportee_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfReporteeId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.REPORTEE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reportee_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByReporteeId(Long... values) {
        return fetch(Report.REPORT.REPORTEE_ID, values);
    }

    /**
     * Fetch records that have <code>reportee_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfReporteeName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.REPORTEE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reportee_name IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByReporteeName(String... values) {
        return fetch(Report.REPORT.REPORTEE_NAME, values);
    }

    /**
     * Fetch records that have <code>reportee_rank BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfReporteeRank(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.REPORTEE_RANK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reportee_rank IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByReporteeRank(String... values) {
        return fetch(Report.REPORT.REPORTEE_RANK, values);
    }

    /**
     * Fetch records that have <code>game_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_number IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameNumber(String... values) {
        return fetch(Report.REPORT.GAME_NUMBER, values);
    }

    /**
     * Fetch records that have <code>game_competition BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameCompetition(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_COMPETITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_competition IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameCompetition(String... values) {
        return fetch(Report.REPORT.GAME_COMPETITION, values);
    }

    /**
     * Fetch records that have <code>game_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Report.REPORT.GAME_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_date IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameDate(LocalDate... values) {
        return fetch(Report.REPORT.GAME_DATE, values);
    }

    /**
     * Fetch records that have <code>game_result BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameResult(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_RESULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_result IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameResult(String... values) {
        return fetch(Report.REPORT.GAME_RESULT, values);
    }

    /**
     * Fetch records that have <code>game_home_team BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameHomeTeam(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_HOME_TEAM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_home_team IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameHomeTeam(String... values) {
        return fetch(Report.REPORT.GAME_HOME_TEAM, values);
    }

    /**
     * Fetch records that have <code>game_home_team_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameHomeTeamId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Report.REPORT.GAME_HOME_TEAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_home_team_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameHomeTeamId(Integer... values) {
        return fetch(Report.REPORT.GAME_HOME_TEAM_ID, values);
    }

    /**
     * Fetch records that have <code>game_guest_team BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameGuestTeam(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_GUEST_TEAM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_guest_team IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameGuestTeam(String... values) {
        return fetch(Report.REPORT.GAME_GUEST_TEAM, values);
    }

    /**
     * Fetch records that have <code>game_guest_team_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameGuestTeamId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Report.REPORT.GAME_GUEST_TEAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_guest_team_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameGuestTeamId(Integer... values) {
        return fetch(Report.REPORT.GAME_GUEST_TEAM_ID, values);
    }

    /**
     * Fetch records that have <code>game_referee1_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee1Id(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE1_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee1_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee1Id(Long... values) {
        return fetch(Report.REPORT.GAME_REFEREE1_ID, values);
    }

    /**
     * Fetch records that have <code>game_referee1_name BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee1Name(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE1_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee1_name IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee1Name(String... values) {
        return fetch(Report.REPORT.GAME_REFEREE1_NAME, values);
    }

    /**
     * Fetch records that have <code>game_referee2_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee2Id(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE2_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee2_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee2Id(Long... values) {
        return fetch(Report.REPORT.GAME_REFEREE2_ID, values);
    }

    /**
     * Fetch records that have <code>game_referee2_name BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee2Name(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE2_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee2_name IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee2Name(String... values) {
        return fetch(Report.REPORT.GAME_REFEREE2_NAME, values);
    }

    /**
     * Fetch records that have <code>game_referee3_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee3Id(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE3_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee3_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee3Id(Long... values) {
        return fetch(Report.REPORT.GAME_REFEREE3_ID, values);
    }

    /**
     * Fetch records that have <code>game_referee3_name BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameReferee3Name(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_REFEREE3_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_referee3_name IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameReferee3Name(String... values) {
        return fetch(Report.REPORT.GAME_REFEREE3_NAME, values);
    }

    /**
     * Fetch records that have <code>game_video_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfGameVideoUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Report.REPORT.GAME_VIDEO_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>game_video_url IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByGameVideoUrl(String... values) {
        return fetch(Report.REPORT.GAME_VIDEO_URL, values);
    }

    /**
     * Fetch records that have <code>overall_score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfOverallScore(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Report.REPORT.OVERALL_SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>overall_score IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByOverallScore(BigDecimal... values) {
        return fetch(Report.REPORT.OVERALL_SCORE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Report.REPORT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Report.REPORT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfCreatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByCreatedBy(Long... values) {
        return fetch(Report.REPORT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Report.REPORT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Report.REPORT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfUpdatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByUpdatedBy(Long... values) {
        return fetch(Report.REPORT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>finished_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfFinishedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Report.REPORT.FINISHED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_at IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(Report.REPORT.FINISHED_AT, values);
    }

    /**
     * Fetch records that have <code>finished_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfFinishedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Report.REPORT.FINISHED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_by IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByFinishedBy(Long... values) {
        return fetch(Report.REPORT.FINISHED_BY, values);
    }

    /**
     * Fetch records that have <code>reminder_sent BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchRangeOfReminderSent(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Report.REPORT.REMINDER_SENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reminder_sent IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.Report> fetchByReminderSent(Boolean... values) {
        return fetch(Report.REPORT.REMINDER_SENT, values);
    }
}
