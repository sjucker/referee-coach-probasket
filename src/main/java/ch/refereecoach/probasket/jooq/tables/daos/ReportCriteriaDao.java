/*
 * This file is generated by jOOQ.
 */
package ch.refereecoach.probasket.jooq.tables.daos;


import ch.refereecoach.probasket.jooq.AbstractSpringDAOImpl;
import ch.refereecoach.probasket.jooq.tables.ReportCriteria;
import ch.refereecoach.probasket.jooq.tables.records.ReportCriteriaRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class ReportCriteriaDao extends AbstractSpringDAOImpl<ReportCriteriaRecord, ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria, Long> {

    /**
     * Create a new ReportCriteriaDao without any configuration
     */
    public ReportCriteriaDao() {
        super(ReportCriteria.REPORT_CRITERIA, ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria.class);
    }

    /**
     * Create a new ReportCriteriaDao with an attached configuration
     */
    @Autowired
    public ReportCriteriaDao(Configuration configuration) {
        super(ReportCriteria.REPORT_CRITERIA, ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria.class, configuration);
    }

    @Override
    public Long getId(ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ReportCriteria.REPORT_CRITERIA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchById(Long... values) {
        return fetch(ReportCriteria.REPORT_CRITERIA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria fetchOneById(Long value) {
        return fetchOne(ReportCriteria.REPORT_CRITERIA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchOptionalById(Long value) {
        return fetchOptional(ReportCriteria.REPORT_CRITERIA.ID, value);
    }

    /**
     * Fetch records that have <code>report_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchRangeOfReportId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ReportCriteria.REPORT_CRITERIA.REPORT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>report_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchByReportId(Long... values) {
        return fetch(ReportCriteria.REPORT_CRITERIA.REPORT_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(ReportCriteria.REPORT_CRITERIA.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchByType(String... values) {
        return fetch(ReportCriteria.REPORT_CRITERIA.TYPE, values);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(ReportCriteria.REPORT_CRITERIA.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchByComment(String... values) {
        return fetch(ReportCriteria.REPORT_CRITERIA.COMMENT, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(ReportCriteria.REPORT_CRITERIA.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportCriteria> fetchByState(String... values) {
        return fetch(ReportCriteria.REPORT_CRITERIA.STATE, values);
    }
}
