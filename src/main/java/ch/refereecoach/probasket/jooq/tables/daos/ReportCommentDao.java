/*
 * This file is generated by jOOQ.
 */
package ch.refereecoach.probasket.jooq.tables.daos;


import ch.refereecoach.probasket.jooq.AbstractSpringDAOImpl;
import ch.refereecoach.probasket.jooq.tables.ReportComment;
import ch.refereecoach.probasket.jooq.tables.records.ReportCommentRecord;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class ReportCommentDao extends AbstractSpringDAOImpl<ReportCommentRecord, ch.refereecoach.probasket.jooq.tables.pojos.ReportComment, Long> {

    /**
     * Create a new ReportCommentDao without any configuration
     */
    public ReportCommentDao() {
        super(ReportComment.REPORT_COMMENT, ch.refereecoach.probasket.jooq.tables.pojos.ReportComment.class);
    }

    /**
     * Create a new ReportCommentDao with an attached configuration
     */
    @Autowired
    public ReportCommentDao(Configuration configuration) {
        super(ReportComment.REPORT_COMMENT, ch.refereecoach.probasket.jooq.tables.pojos.ReportComment.class, configuration);
    }

    @Override
    public Long getId(ch.refereecoach.probasket.jooq.tables.pojos.ReportComment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ReportComment.REPORT_COMMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchById(Long... values) {
        return fetch(ReportComment.REPORT_COMMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ch.refereecoach.probasket.jooq.tables.pojos.ReportComment fetchOneById(Long value) {
        return fetchOne(ReportComment.REPORT_COMMENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchOptionalById(Long value) {
        return fetchOptional(ReportComment.REPORT_COMMENT.ID, value);
    }

    /**
     * Fetch records that have <code>report_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchRangeOfReportId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ReportComment.REPORT_COMMENT.REPORT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>report_id IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchByReportId(Long... values) {
        return fetch(ReportComment.REPORT_COMMENT.REPORT_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(ReportComment.REPORT_COMMENT.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchByType(String... values) {
        return fetch(ReportComment.REPORT_COMMENT.TYPE, values);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(ReportComment.REPORT_COMMENT.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchByComment(String... values) {
        return fetch(ReportComment.REPORT_COMMENT.COMMENT, values);
    }

    /**
     * Fetch records that have <code>score BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchRangeOfScore(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(ReportComment.REPORT_COMMENT.SCORE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>score IN (values)</code>
     */
    public List<ch.refereecoach.probasket.jooq.tables.pojos.ReportComment> fetchByScore(BigDecimal... values) {
        return fetch(ReportComment.REPORT_COMMENT.SCORE, values);
    }
}
